services:
  traefik:
    image: traefik:v3.1
    command:
      - "--api.insecure=true"                  # dashboard accessible sur :8080
      - "--providers.docker=true"
      - "--entrypoints.web.address=:3000"      # port d'entrée pour ton app
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--entrypoints.metrics.address=:9100"
    ports:
      - "3000:3000"    # accès à ton app
      - "8080:8080"    # dashboard Traefik (facultatif)
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"  # accès aux labels Docker

  std-server:
    image: ghcr.io/sipixer/server-chat/chat-server:main-f2a5044
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      ELASTICACHE_ENDPOINT: "redis:6379"
    depends_on:
      - redis
    deploy:
      replicas: 2
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.std-server.rule=PathPrefix(`/`)"
      - "traefik.http.routers.std-server.entrypoints=web"
      - "traefik.http.services.std-server.loadbalancer.server.port=3000"
      - "traefik.http.services.std-server.loadbalancer.sticky.cookie=true"
      - "traefik.http.services.std-server.loadbalancer.sticky.cookie.name=std-session"

  redis:
    image: redis:8.2.2-alpine
    ports:
      - "6379:6379"

  redis-exporter:
    image: bitnami/redis-exporter
    restart: unless-stopped
    environment:
      REDIS_ADDR: redis://redis:6379
    depends_on:
      - redis

  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    command:
      - '--path.rootfs=/host'
    pid: host
    volumes:
      - '/:/host:ro,rslave'
    ports:
      - "9100:9100"

  prometheus:
    image: prom/prometheus:v2.54.1
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=15d"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - std-server
      - traefik
      - redis-exporter

  grafana:
    image: grafana/grafana-oss
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_DASHBOARDS_MIN_REFRESH_INTERVAL: 5s
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/dashboards:/etc/grafana/dashboards:ro
    ports:
      - "3001:3000"
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    privileged: true
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /sys:/sys:ro
    ports:
      - "8085:8080"

networks:
  default:
    name: std-network

volumes:
  prometheus_data:
  grafana_data:
